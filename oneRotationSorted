import java.util.ArrayList;
import java.util.Stack;

public class onerotation {
    public static boolean issorted(ArrayList<Integer> newal) {
        boolean result = false;
        if (newal == null || newal.size() <= 1) {
            return true;
        }
        for (int i = 0; i < newal.size() - 1; i++) {
            if (newal.get(i) > newal.get(i + 1)) {
                return false;

            }

        }
        return true;
    }

    public static void main(String[] args) {
        int[] arr = new int[] { 4, 1, 5, 3, 2 };
        ArrayList<Integer> reg = new ArrayList<>();
        ArrayList<Integer> newal = new ArrayList<>();
        Stack<Integer> s = new Stack<Integer>();
        for (int i = 0; i < arr.length; i++) {
            for (int j = i; j < arr.length; j++) {
                if (arr[i] > arr[j]) {
                    if (!s.contains(arr[i])) {
                        s.push(arr[i]);
                    }
                }

            }
        }

        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < s.capacity(); j++) {
                if (!s.contains(arr[i])) {
                    if (!newal.contains(arr[i])) {
                        newal.add(arr[i]);
                    }

                }
            }
        }

        for (int j = 0; j < s.capacity(); j++) {
            reg.add((s.pop()));
            if (s.isEmpty()) {
                break;
            }
        }

        newal.addAll(reg);

        if (issorted(newal) == true) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

    }
}
